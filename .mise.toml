[env]
DATABASE_URL = 'op://Private/Supabase Connection Strings/pond_dev'
CA_CERT_PATH = '.private/prod-ca-2021.crt'
LOGFIRE_WRITE_TOKEN = 'op://Private/czesn34xkbz7oxnrrjnsct7som/credential'
OLLAMA_BASE_URL = 'http://10.1.1.71:11434'
OTEL_DENO = 'true'
OTEL_EXPORTER_OTLP_TRACES_ENDPOINT = 'https://logfire-us.pydantic.dev/v1/traces'
OTEL_EXPORTER_OTLP_LOGS_ENDPOINT = 'https://logfire-us.pydantic.dev/v1/logs'

[tasks.pre-commit]
description = "Pre-commit checks for code quality"
run = [
  "echo '🔍 Running pre-commit checks...'",
  "deno task fmt:check",
  "deno lint src/",
  "deno task check",
  "echo '✅ All pre-commit checks passed!'",
]

[tasks.pre-commit-with-tests]
description = "Pre-commit checks including tests (slower but thorough)"
run = [
  "echo '🔍 Running comprehensive pre-commit checks...'",
  "deno task fmt:check",
  "deno lint src/",
  "deno task check",
  "deno task test",
  "echo '✅ All pre-commit checks and tests passed!'",
]

[tasks.format]
description = "Format all code"
run = "deno task fmt"

[tasks.setup-git-hooks]
description = "Install git pre-commit hook (idempotent)"
run = '''
echo "🪝 Checking git pre-commit hook setup..."
if [ -f .git/hooks/pre-commit ] && grep -q "mise run pre-commit" .git/hooks/pre-commit; then
  echo "✅ Pre-commit hook already installed"
else
  echo "📝 Installing pre-commit hook..."
  mkdir -p .git/hooks
  cat > .git/hooks/pre-commit << 'EOF'
#!/bin/sh
# Pre-commit hook managed by mise
mise run pre-commit
EOF
  chmod +x .git/hooks/pre-commit
  echo "✅ Git pre-commit hook installed! Use mise run pre-commit-with-tests for thorough checks."
fi
'''

[tasks.lint]
description = "Run linter on source code"
run = "deno lint src/"

[tasks.typecheck]
description = "Run TypeScript type checking"
run = "deno task check"

[tasks.tables_bootstrap]
description = "Apply SQL migrations."
alias = "migrate"
run = "op run -- deno run --allow-env --allow-net --allow-read $MISE_PROJECT_ROOT/src/infrastructure/migrations/run-migrations.ts"

[tasks.tables_nuke]
description = "Drop all tables in the db."
alias = "nuke"
run = "op run -- deno run --allow-env --allow-net --allow-read nuke_tables.ts"

[tasks.ts]
description = "Run TypeScript files with environment injection and default permissions"
run = "op run -- deno run --allow-net --allow-read --allow-env"


[tasks.ts-otel]
description = "Run TypeScript files with OTEL enabled. This includes logs and traces."
run = '''
OTEL_EXPORTER_OTLP_HEADERS="Authorization=$(op read op://Private/czesn34xkbz7oxnrrjnsct7som/credential)" op run -- deno run --allow-net --allow-read --allow-env
'''
